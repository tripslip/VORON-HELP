#.................................................................................................................
# -SuperSlicer's start print gcode should contain the following:  
#   PRINT_START BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature PA=0.044 ST=0.02  
# SIZE={first_layer_print_min[0]}_{first_layer_print_min[1]}_{first_layer_print_max[0]}_{first_layer_print_max[1]}
#
#   !! The following optional parameters can be specified. If not specified, the values set in printer.cfg will be used.
#    -Optionally can specify ENCLOSURE_TEMP temperature, as ENCLOSURE_TEMP=40
#    -Optionally can specify Minutes to Soak, as SOAK=15
# -SuperSlicer's & Cura's end print gcode should contain the following:
#   Use PRINT_END for the slicer ending script
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
#[gcode_macro globalvariables]
#variable_defaultTempNozzle: 240        # The default Nozzle Extruding temperature if none is specified
#variable_defaultWarmNozzle: 160        # The default Nozzle Warming temperature if none is specified
#variable_defaultEnclosure: 40          # The default Enclosure temperature if none is specified
#variable_defaultTempBed: 110           # The default Bed temperature if none is specified
#variable_PurgeRetract: 0.1             # After completing purgeline, how much retraction to perform (Not normally needed)
#variable_EndRetract: 2.0               # After print has completed, how much retraction to perform
#variable_PrePrintSoakMinutes: 15       # Minutes to heat-soak prior to printing
#variable_PostPrintCool: 1              # Post-Print cooling to prevent nozzle string, minutes of cooling
#variable_PostPrintParkCool: 2          # Once parks, minutes of cooling
#gcode:
#.................................................................................................................
# Required external macro(s) used by this macro set.
#
# _HEAT_WAIT
# _COOL_WAIT
# G32 (in MACRO-TAPTAP.cfg)
# G3201 (in MACRO-TAPTAP.cfg)
# CONFIG-NO_ENCLOSURE_CONTROL.cfg / CONFIG-ENCLOSURE_CONTROL.cfg for M141 command
# CURRENT_HIGH
# CURRENT_NORMAL
# PARK_UpperRight
# PARK_Center
#.................................................................................................................

[gcode_macro _PRINT_VARIABLES]
variable_extruder_temp: 235
variable_extruder_warm: 160
gcode:
    M117 Happy Printing



[gcode_macro PRINT_START]
description: Performs all needed moves prior to printing
gcode:
    CLEAR_PAUSE
    BED_MESH_CLEAR
    M220 S100
    M221 S100
    SET_LED LED=sb_leds RED=.2 GREEN=.2 BLUE=1
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
    #{% set CFG_PA = printer.configfile.config["extruder"]["pressure_advance"]|float %}
    #{% set CFG_ST = printer.configfile.config["extruder"]["pressure_advance_smooth_time"]|float %} 
    {% set SLICER_PA = params.PA|default(CFG_PA) %}
    {% set SLICER_ST = params.ST|default(CFG_ST) %}
    #SET_PRESSURE_ADVANCE ADVANCE={SLICER_PA} SMOOTH_TIME={SLICER_ST}
    {% set defaultTN = printer["gcode_macro globalvariables"].defaulttempnozzle|float %}
    {% set defaultWN = printer["gcode_macro globalvariables"].defaultwarmnozzle|float %}
    {% set defaultSOAK = printer["gcode_macro globalvariables"].preprintsoakminutes|float %}
    {% set defaultTB = printer["gcode_macro globalvariables"].defaulttempbed|float %}
    {% set defaultENCLOSURE = printer["gcode_macro globalvariables"].defaultenclosure|float %}
    {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
    {% set EXTRUDER_WARM = params.EXTRUDER_WARM|default(defaultWN)|float %}
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_temp VALUE={params.EXTRUDER_TEMP|default(defaultTN)|float}
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_warm VALUE={params.EXTRUDER_WARM|default(defaultWN)|float}
    #{% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(defaultENCLOSURE)|float %}
    #{% set SOAK = params.SOAK|default(defaultSOAK) %}
    M118 { rawparams }
    M118 gCode file passed the following to PRINT_START:

    # Bring bed to full temperature, only warm hotend
    M140 S{BED_TEMP}
    M104 S{EXTRUDER_WARM}
    G90
    G21
    M83
    G92 E0.0
    # Reset the G-Code Z offset
    SET_GCODE_OFFSET Z=0.0
    M117 Performing initial homing.
    BED_MESH_CLEAR
    G28
    M117 Warming nozzle for QGL.
    M109 S{EXTRUDER_WARM}
    M117 Performing initial QGL.
    QUAD_GANTRY_LEVEL
    G28 Z
    PARK_Center
    M117 Bringing bed to temperature.
    STATUS_HEATING
    SET_NOZZLE_LEDS_ON
    M190 S{BED_TEMP}
    {% if params.NONPRINT %}  
        _HEAT_WAIT MINUTES={SOAK}
        _PRINT_START2
      {% else %}
        _WAIT_Start MINUTES={SOAK}
    {% endif %}


[gcode_macro _PRINT_START2]
description: Part 2 - Performs all needed moves prior to printing
gcode:
    RESUME_BASE
    {% set EXTRUDER_TEMP = printer["gcode_macro _PRINT_VARIABLES"].extruder_temp|int %}
    SET_LED LED=sb_leds RED=.5 GREEN=0 BLUE=.5
    CURRENT_HIGH
    M117 Performing hot level.
    M400
    G3201
    M104 S{EXTRUDER_TEMP}
    M117 Moving nozzle to purgle line start position.
    G1 X0 Y20 F4000
    G1 Z1.5
    STATUS_HEATING
    SET_NOZZLE_LEDS_ON
    M117 Bringing nozzle to temperature.
    M118 Bringing nozzle to temperature.
    M109 S{EXTRUDER_TEMP}
    _FILAMENT_READY
    M117 Printing.
    M118 Printing.
    STATUS_PRINTING
    SET_NOZZLE_LEDS_ON



#----------------------------------------- PURGE LINE & READY FOR PRINT -------------------------------------------- 
[gcode_macro _FILAMENT_READY]
description: Performs filament specific purgeline and readies for print
gcode:
    STATUS_BUSY
    SET_NOZZLE_LEDS_ON
    {% set NZLD = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}  
    {% set purgeRetract = printer["gcode_macro globalvariables"].purgeretract|float %}

    {% set MeshCenter = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].mesh_center | string %}
    {% set X_MeshCenter, Y_MeshCenter = MeshCenter.split(',')|map('trim')|map('int') %}
    {% set MeshMin = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].mesh_min | string %}
    {% set X_MeshMin, Y_MeshMin = MeshMin.split(',')|map('trim')|map('int') %}
    
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].limitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].limitdecel|float}

    M117 Purging nozzle.
    # Purge line start
    G1 X0 Y19.8 Z3 F300.0
    M400    
    G1 X130 Y0.0 Z0.3 F3000.0
    G1 X010 Y0.0 Z0.3 F1500.0 E{(37.5 * NZLD)}
    G1 X010 Y0.3 Z0.3 F5000.0
    G1 X130 Y0.3 Z0.3 F1500.0 E{(75.0 * NZLD)}
    M400
    G92 E0
    # Purge line completed, now retract as defined
    G1 E-{purgeRetract} F3000
    G1 Z3 F3000
    G1 X{X_MeshCenter} Y{Y_MeshCenter} F4000




#.................................................................................................................
[gcode_macro PRINT_END]
description: Performs all needed actions upon completion of printing
gcode:
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].nplimitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].nplimitdecel|float}
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}
    G91
    G0 Z5 F1000
    G90
    G92 E0                         ; zero the extruder
    G1 E-{EndRetract} F3600        ; retract filament
    M400
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    TURN_OFF_HEATERS
    CURRENT_NORMAL
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintcool|float}
    PARK_UpperRight
    #M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float}
    SET_LED LED=sb_leds RED=.2 GREEN=.5 BLUE=.2
    {% set defaultTN = printer["gcode_macro globalvariables"].defaulttempnozzle|float %}
    {% set defaultWN = printer["gcode_macro globalvariables"].defaultwarmnozzle|float %}
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_temp VALUE={defaultTN}
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_warm VALUE={defaultWN}
    STATUS_PART_READY
    M117 Finished printing, check nozzle clear.
    M118 Finished printing, check nozzle clear.
    {% set mesh_center = "0,0" %}
    SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_center VALUE='"{mesh_center}"'



#.................................................................................................................
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    {% set x = params.X|default(0) %}        #edit to your park position
    {% set y = params.Y|default(20) %}       #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
      {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
        G1 Z{z_safe}
        G90
        G1 X{x} Y{y} F4000
      {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %}



#.................................................................................................................
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    {% if printer["gcode_macro _WAIT_Variable"].waiting %}
        WAIT_Quit
    {% else %}

    {% set EXTRUDER_TEMP = printer["gcode_macro _PRINT_VARIABLES"].extruder_temp|int %}
    {% set e = params.E|default(1) %} #edit to your retract length
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
    {% endif %}
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
      {% else %}
         M117 Bringing nozzle to {EXTRUDER_TEMP}C.
         M109 S{EXTRUDER_TEMP}
         G1 E{e} F21
    {% endif %}  
    RESUME_BASE {get_params}

    {% endif %} 



#.................................................................................................................
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].nplimitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].nplimitdecel|float}
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-{EndRetract} F3600        ; retract filament
    CLEAR_PAUSE
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    CURRENT_NORMAL
    M106 S250
    G90
    PARK_UpperRight
    #M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float}
    SET_LED LED=sb_leds RED=.2 GREEN=.5 BLUE=.2
    {% set defaultTN = printer["gcode_macro globalvariables"].defaulttempnozzle|float %}
    {% set defaultWN = printer["gcode_macro globalvariables"].defaultwarmnozzle|float %}
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_temp VALUE={defaultTN}
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_warm VALUE={defaultWN}
    M117 Cancelled print, check nozzle clear.
    M118 Cancelled print, check nozzle clear.
    {% set mesh_center = "0,0" %}
    SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_center VALUE='"{mesh_center}"'
    STATUS_READY
